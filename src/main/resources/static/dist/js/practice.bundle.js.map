{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/_eventemitter3@3.1.0@eventemitter3/index.js","webpack:///./resource/js/practice.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","0","e","has","prefix","Events","addListener","emitter","event","fn","context","once","TypeError","listener","this","evt","_events","push","_eventsCount","clearEvent","EventEmitter","__proto__","eventNames","events","names","slice","getOwnPropertySymbols","concat","listeners","handlers","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","removeAllListeners","off","prefixed","$","[object Object]","data","current","index","answer","dom","examLang","examType","currentNum","totalNum","des","form","btns","examUl","getData","ret","console","log","switchType","updateHeader","createMain","createFooter","hideLoading","clickBtns","clickItem","then","res","JSON","parse","username","localStorage","setItem","getItem","showLoading","done","type","text","lang","addClass","createChoice","createDefault","description","input","attr","id","label","content","wrapper","append","after","textarea","col","row","remove","dataList","itemFragment","document","createDocumentFragment","li","createElement","innerHTML","classList","appendChild","target","children","toArray","$target","forEach","child","hasClass","removeClass","handleNext","handleAhead","save","updateMain","recover","updateFooter","find","submit","inputs","cur_answer","ans","seq","ipt","checked","val","ansarr","split","idx","handleAnswer","alert","answers","map","String","fromCharCode","parseInt","join","post","stringify","success","location","href","init"],"mappings":"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","file":"./js/practice.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import '../scss/practice.scss'\r\nimport { EventEmitter } from 'eventemitter3'\r\nconst emitter = new EventEmitter()\r\n\r\nclass Practice {\r\n    constructor() {\r\n        this.data = null\r\n        this.current = null\r\n        this.index = 0\r\n        this.answer = [] // [{ans: '123123'}]\r\n\r\n        this.dom = {\r\n            examLang: $('.exam-lang'),\r\n            examType: $('.exam-type'),\r\n            currentNum: $('.current-num'),\r\n            totalNum: $('.total-num'),\r\n            des: $('.exam-des'),\r\n            form: null,\r\n            btns: $('.btn-group'),\r\n            examUl: $('.exam-items')\r\n        }\r\n    }\r\n\r\n    init() {\r\n        this.getData()\r\n        emitter.on('getData', (data) => {\r\n            if (data.ret && data.data) {\r\n                this.data = data\r\n                this.current = data.data[0]\r\n                console.log(this.current)\r\n                this.switchType()\r\n                this.updateHeader()\r\n                this.createMain()\r\n                this.createFooter()\r\n\r\n                this.hideLoading()\r\n                this.clickBtns()\r\n                this.clickItem()\r\n            }\r\n        })\r\n        $.get('/api/userinfo')\r\n            .then(res => {\r\n                res = JSON.parse(res)\r\n                if (res.ret) {\r\n                    this.username = res.data.username\r\n                    localStorage.setItem('prName', this.username)\r\n                    console.log(localStorage.getItem('prName'))\r\n                }\r\n            })\r\n    }\r\n\r\n    getData() {\r\n        this.showLoading()\r\n        $.get('api/back')\r\n            .done(data => {\r\n                console.log(data)\r\n                data = JSON.parse(data)\r\n                emitter.emit('getData', data)\r\n            })\r\n    }\r\n\r\n    showLoading() {}\r\n\r\n    hideLoading() {}\r\n\r\n    switchType() {\r\n        let data = this.data.data\r\n        let len = data.length\r\n        for (let i = 0; i < len; i++) {\r\n            let type = data[i].type\r\n            switch(type) {\r\n                case 'radio':\r\n                    data[i].type = '单选'\r\n                    break\r\n                case 'checkbox':\r\n                    data[i].type = '多选'\r\n                    break\r\n                default:\r\n                    data[i].type = '简答'\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    updateHeader() {\r\n        let index = this.index\r\n        this.dom.examLang.text(this.current.lang)\r\n        this.dom.examType.text(this.current.type)\r\n        this.dom.currentNum.text(index + 1)\r\n        this.dom.totalNum.text(this.data.data.length)\r\n    }\r\n\r\n    createMain() {\r\n        this.dom.form = $('<form>').addClass('exam-form')\r\n        if (this.current.type === '单选') {\r\n            this.createChoice('radio')\r\n        } else if (this.current.type === '多选') {\r\n            this.createChoice('checkbox')\r\n        } else {\r\n            this.createDefault()\r\n        }\r\n        this.dom.des.text(this.current.description)\r\n    }\r\n\r\n    createChoice(type) {\r\n        for (let i = 0; i < 4; i++) {\r\n            let input = $('<input>').addClass('custom-control-input')\r\n                .attr({\r\n                    type: type,\r\n                    name: `exam-${type}`,\r\n                    id: `exam-${type}-${i}`\r\n                })\r\n            let label = $('<label>').addClass('custom-control-label')\r\n                .attr('for', `exam-${type}-${i}`)\r\n                .text(this.current.content[i])\r\n            let wrapper = $('<div>').addClass(`custom-control custom-${type}`)\r\n                .append(input, label)\r\n            this.dom.form.append(wrapper)\r\n        }\r\n        this.dom.des.after(this.dom.form)\r\n    }\r\n\r\n    createDefault() {\r\n        let textarea = $('<textarea>').attr({\r\n            col: 100,\r\n            row: 20\r\n        })\r\n        this.dom.form.append(textarea)\r\n        this.dom.des.after(this.dom.form)\r\n    }\r\n\r\n    updateMain() {\r\n        this.dom.form.remove()\r\n        this.current = this.data.data[this.index]\r\n        this.createMain()\r\n    }\r\n\r\n    createFooter() {\r\n        const dataList = this.data.data\r\n        let itemFragment = document.createDocumentFragment()\r\n        for (let i = 0, len = dataList.length; i < len; i++) {\r\n            let li = document.createElement('li')\r\n            li.innerHTML = i + 1\r\n            li.classList = 'exam-item'\r\n            if (i === 0) {\r\n                li.classList += ' answering'\r\n            }\r\n            itemFragment.appendChild(li)\r\n        }\r\n        this.dom.examUl[0].appendChild(itemFragment)\r\n    }\r\n\r\n    updateFooter(target) {\r\n        let children = this.dom.examUl.children().toArray()\r\n        let $target = (typeof target === 'number') ? $(children[target]) : $(target)\r\n        children.forEach(child => {\r\n            if ($(child).hasClass('answering')) {\r\n                $(child).removeClass('answering')\r\n            }\r\n        })\r\n        $target.addClass('answering')\r\n    }\r\n\r\n    clickBtns() {\r\n        this.dom.btns.on('click', e => {\r\n            let target = e.target\r\n            $(target).hasClass('btn-next') ? this.handleNext() : this.handleAhead()\r\n        })\r\n    }\r\n\r\n    clickItem() {\r\n        this.dom.examUl.on('click', e => {\r\n            let target = e.target\r\n            let len = this.data.data.length\r\n            this.save()\r\n            this.index = $(target).index()\r\n            this.current = this.data.data[this.index]\r\n            this.updateHeader()\r\n            this.updateMain()\r\n            this.recover()\r\n            this.updateFooter(target)\r\n            if (this.index === len - 1) {\r\n                this.dom.btns.find('.btn-next').text('完成练习')\r\n            } else {\r\n                this.dom.btns.find('.btn-next').text('下一题')\r\n            }\r\n        })\r\n    }\r\n\r\n    handleNext() {\r\n        let len = this.data.data.length\r\n        if (this.index < len - 1) {\r\n            this.save()\r\n            this.current = this.data.data[++this.index]\r\n            this.updateHeader()\r\n            this.updateMain()\r\n            this.recover()\r\n            this.updateFooter(this.index)\r\n            if (this.index === len - 1) {\r\n                this.dom.btns.find('.btn-next').text('完成练习')\r\n            } else {\r\n                this.dom.btns.find('.btn-next').text('下一题')\r\n            }\r\n        } else {\r\n            this.index = len - 1\r\n            this.submit()\r\n        }\r\n    }\r\n\r\n    handleAhead() {}\r\n\r\n    save() {\r\n        let form = this.dom.form\r\n        let inputs = form.find('input').toArray()\r\n        let cur_answer = {\r\n            ans: '',\r\n            seq: this.index,\r\n            type: this.current.type\r\n        }\r\n        if (inputs.length) {\r\n            inputs.forEach((ipt, i) => {\r\n                if (ipt.checked) {\r\n                    cur_answer.ans += i\r\n                }\r\n            })\r\n        } else {\r\n            cur_answer.ans = form.find('textarea').val()\r\n        }\r\n        if (cur_answer.ans) { // 是否选择了答案\r\n            if (!this.answer[this.index]) { // 没保存过答案\r\n                this.answer.push(cur_answer) // 执行保存\r\n            } else {\r\n                if (this.answer[this.index].ans !== cur_answer.ans) { // 用于修改过答案\r\n                    this.answer[this.index].ans = cur_answer.ans\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    recover() {\r\n        let index = this.index\r\n        let ans\r\n        if (this.answer[index]) {\r\n            ans = this.answer[index].ans\r\n        }\r\n        if (ans) {\r\n            let inputs = this.dom.form.find('input').toArray()\r\n            if (inputs.length) {\r\n                let ansarr = ans.split('')\r\n                let len = ansarr.length\r\n                for (let i = 0; i < len; i++) {\r\n                    inputs.forEach((ipt, idx) => {\r\n                        if (ansarr[i] == idx) {\r\n                            ipt.checked = true\r\n                        }\r\n                    })\r\n                }\r\n            } else {\r\n                this.dom.form.find('textarea').val(ans)\r\n            }\r\n        }\r\n    }\r\n\r\n    submit() {\r\n        this.save()\r\n        this.handleAnswer()\r\n        alert('完成')\r\n    }\r\n\r\n    handleAnswer() {\r\n        console.log(this.answer)\r\n        let answers = this.answer.map(answer => {\r\n            if (answer.type !== '简答') {\r\n                return answer.ans.split('').map(ans => {\r\n                    if (!ans) {\r\n                        return null\r\n                    }\r\n                    return String.fromCharCode(65 + parseInt(ans))\r\n                }).join('')\r\n            } else {\r\n                return answer.ans\r\n            }\r\n        })\r\n        $.post('/api/practice_submit', `answers=${JSON.stringify(answers)}`)\r\n            .done(res => {\r\n                console.log(res)\r\n                res = JSON.parse(res)\r\n                if (res.success) {\r\n                    localStorage.setItem('prResult', JSON.stringify(res))\r\n                    location.href = './practice_detail.html'\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n$(() => {\r\n    const practice = new Practice()\r\n    practice.init()\r\n})"],"sourceRoot":""}